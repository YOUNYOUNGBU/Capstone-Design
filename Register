리액트로 로그인, 회원가입 화면 만들기

1. Login.jsx
import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import './Login.css'; // 스타일 파일 가져오기

function Login() {
    const [username, setUsername] = useState('');
    const [password, setPassword] = useState('');
    const navigate = useNavigate();

    const handleSubmit = (event) => {
        event.preventDefault();
        console.log('Username:', username);
        console.log('Password:', password);
    };

    const goToRegister = () => {
        navigate('/register'); // 회원가입 페이지로 이동
    };

    return (
        <div className="login-container">
            <h2 className="login-title">로그인</h2>
            <form onSubmit={handleSubmit} className="login-form">
                <div className="form-group">
                    <label htmlFor="username">사용자 이름</label>
                    <input
                        type="text"
                        id="username"
                        value={username}
                        onChange={(e) => setUsername(e.target.value)}
                        placeholder="사용자 이름을 입력하세요"
                        required
                    />
                </div>
                <div className="form-group">
                    <label htmlFor="password">비밀번호</label>
                    <input
                        type="password"
                        id="password"
                        value={password}
                        onChange={(e) => setPassword(e.target.value)}
                        placeholder="비밀번호를 입력하세요"
                        required
                    />
                </div>
                <button type="submit" className="login-button">로그인</button>
            </form>
            <button onClick={goToRegister} className="register-link">회원가입</button>
        </div>
    );
}

export default Login;

2. Register.jsx
import React, { useState } from 'react';
import './Register.css';

function Register() {
    const md = require('markdown-it')({
        html: false, // HTML 비활성화
    });
    const [email, setEmail] = useState('');
    const [username, setUsername] = useState('');
    const [password, setPassword] = useState('');
    const [userId, setUserId] = useState(''); // user_Id 추가
    const [phoneNumber, setPhoneNumber] = useState(''); // phone_number 추가
    const [message, setMessage] = useState(''); // 성공/실패 메시지 상태 추가

    const handleRegister = async () => {
        const user = {
            userId: userId,
            email: email,
            name: username, // "username"을 "name"으로 매핑
            phoneNumber: phoneNumber,
            password: password,
        };

        try {
            const response = await fetch('http://localhost:8080/api/users/register', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(user),
            });

            if (response.ok) {
                const data = await response.json();
                console.log('회원가입 성공:', data);
                setMessage('회원가입 성공!'); // 성공 메시지 설정
            } else {
                console.error('회원가입 실패');
                setMessage('회원가입 실패!'); // 실패 메시지 설정
            }
        } catch (error) {
            console.error('에러 발생:', error);
            setMessage('에러 발생! 다시 시도해주세요.'); // 에러 메시지 설정
        }
    };

    return (
        <div className="register-container">
            <h2 className="register-title">회원가입</h2>
            {message && <p className="register-message">{message}</p>} {/* 메시지 표시 */}
            <form className="register-form">
                <div className="form-group">
                    <label htmlFor="userId">사용자 ID</label>
                    <input
                        type="text"
                        id="userId"
                        value={userId}
                        onChange={(e) => setUserId(e.target.value)}
                        placeholder="사용자 ID를 입력하세요"
                        required
                    />
                </div>
                <div className="form-group">
                    <label htmlFor="email">이메일</label>
                    <input
                        type="email"
                        id="email"
                        value={email}
                        onChange={(e) => setEmail(e.target.value)}
                        placeholder="이메일을 입력하세요"
                        required
                    />
                </div>
                <div className="form-group">
                    <label htmlFor="username">사용자 이름</label>
                    <input
                        type="text"
                        id="username"
                        value={username}
                        onChange={(e) => setUsername(e.target.value)}
                        placeholder="사용자 이름을 입력하세요"
                        required
                    />
                </div>
                <div className="form-group">
                    <label htmlFor="phoneNumber">전화번호</label>
                    <input
                        type="tel"
                        id="phoneNumber"
                        value={phoneNumber}
                        onChange={(e) => setPhoneNumber(e.target.value)}
                        placeholder="전화번호를 입력하세요"
                        required
                    />
                </div>
                <div className="form-group">
                    <label htmlFor="password">비밀번호</label>
                    <input
                        type="password"
                        id="password"
                        value={password}
                        onChange={(e) => setPassword(e.target.value)}
                        placeholder="비밀번호를 입력하세요"
                        required
                    />
                </div>
                <button type="button" onClick={handleRegister} className="register-button">
                    회원가입
                </button>
            </form>
        </div>
    );
}

export default Register;

3. Register.css
.register-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 100vh;
    background: linear-gradient(135deg, #ff7e5f, #feb47b);
    color: #fff;
    font-family: Arial, sans-serif;
}

.register-title {
    font-size: 2rem;
    margin-bottom: 20px;
}

.register-form {
    background: #fff;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
    width: 300px;
}

.form-group input {
    width: 100%;
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
}

.register-button {
    background: #feb47b;
    color: #fff;
    border: none;
    padding: 10px 15px;
    border-radius: 5px;
    cursor: pointer;
    width: 100%;
}

4. Login.css        
.login-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 100vh;
    background: linear-gradient(135deg, #6a11cb, #2575fc);
    color: #fff;
    font-family: Arial, sans-serif;
}

.login-title {
    font-size: 2rem;
    margin-bottom: 15px;
}

.login-form {
    background: #fff;
    padding: 40px;
    border-radius: 10px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
    width: 300px;
}

.form-group {
    margin-bottom: 15px;
}

.form-group input {
    width: 100%;
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
}

.login-button {
    background: #2575fc;
    color: #fff;
    border: none;
    padding: 10px 15px;
    border-radius: 5px;
    cursor: pointer;
    width: 100%;
}

.register-link {
    margin-top: 10px;
    background: transparent;
    color: #fff;
    border: 2px solid #fff;
    padding: 10px 15px;
    border-radius: 5px;
    cursor: pointer;
    font-size: 1rem;
}

5. App.js
import React from 'react';
import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';
import Login from './Login';
import Register from './Register';

function App() {
    return (
        <Router>
            <Routes>
                <Route path="/" element={<Login />} />
                <Route path="/register" element={<Register />} />
            </Routes>
        </Router>
    );
}

export default App;
                                
6. package.json
{
  "name": "my-login-app",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@testing-library/dom": "^10.4.0",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^13.5.0",
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "react-router-dom": "^7.5.0",
    "react-scripts": "5.0.1",
    "web-vitals": "^2.1.4"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}
                                
